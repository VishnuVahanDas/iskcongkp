"""
Django settings for iskcongkp project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
import os.path
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = os.path.dirname(os.path.dirname(
    os.path.dirname(os.path.abspath(__file__))))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True
ALLOWED_HOSTS = ["iskcongorakhpur.com", "www.iskcongorakhpur.com"]

CSRF_TRUSTED_ORIGINS = [
    "https://iskcongorakhpur.com",
    "https://www.iskcongorakhpur.com",
    "https://smartgateway.hdfcbank.com",
    "https://smartgatewayuat.hdfcbank.com",
    "https://*.juspay.in",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts',
    'payments',
    'donation',
    'homepage',
    'who_we_are',
    'festivals',
    'services',
    'django_cleanup.apps.CleanupConfig', # should go after your apps
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'iskcongkp.middleware.MaintenanceModeMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'iskcongkp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'iskcongkp.wsgi.application'

# Friendly CSRF failure page
CSRF_FAILURE_VIEW = 'iskcongkp.views.csrf_failure'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'iskcongkp',
        'USER': os.environ.get("DATABASE_USER"),
        'PASSWORD': os.environ.get("DATABASE_PASSWORD"),
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# assets paths

STATIC_URL = '/assets/'
STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

# media paths
MEDIA_URL = "/media/"  # django storage
MEDIA_ROOT = os.path.join(BASE_DIR, "media")


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# user redirect
#LOGIN_REDIRECT_URL = "home"
#LOGOUT_REDIRECT_URL = "home"

# CkEditor
#CKEDITOR_UPLOAD_PATH = "uploads/"

# Social login Django allauth settings
SITE_ID = 1
MAINTENANCE_MODE = False

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = os.getenv("SMTP_HOST", "smtpout.secureserver.net")
EMAIL_PORT = int(os.getenv("SMTP_PORT", "465"))     # or 587
EMAIL_HOST_USER = os.getenv("SMTP_USER")            # full email, e.g. you@yourdomain.com
EMAIL_HOST_PASSWORD = os.getenv("SMTP_PASS")
EMAIL_USE_SSL = os.getenv("SMTP_USE_SSL", "true").lower() == "true"   # true if port 465
EMAIL_USE_TLS = os.getenv("SMTP_USE_TLS", "false").lower() == "true"  # true if port 587
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", EMAIL_HOST_USER)
EMAIL_TIMEOUT = int(os.getenv("EMAIL_TIMEOUT", "20"))
EMAIL_FAIL_SILENTLY = os.getenv("EMAIL_FAIL_SILENTLY", "true").lower() == "true"

# Payments notifications (dev/defaults)
PAYMENTS_ADMIN_EMAILS = os.getenv("PAYMENTS_ADMIN_EMAILS", "vipul57612@gmail.com")

# Basic logging to surface email/send issues in console
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'accounts.emails': {
            'handlers': ['console'],
            'level': os.getenv('EMAIL_LOG_LEVEL', 'INFO').upper(),
            'propagate': False,
        },
        'accounts.views': {
            'handlers': ['console'],
            'level': os.getenv('APP_LOG_LEVEL', 'INFO').upper(),
            'propagate': False,
        },
        'django.core.mail': {
            'handlers': ['console'],
            'level': os.getenv('EMAIL_SMTP_LOG_LEVEL', 'WARNING').upper(),
            'propagate': False,
        },
    },
}
